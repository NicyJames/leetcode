#include <unordered_set>
#include <vector>

class Solution {
public:
    bool containsNearbyDuplicate(std::vector<int>& nums, int k) {
        std::unordered_set<int> window; // A sliding window of size k
        for(int i = 0; i < nums.size(); ++i) {
            // If the current number is already in the window, return true
            if(window.find(nums[i]) != window.end()) {
                return true;
            }
            // Add the current number to the window
            window.insert(nums[i]);
            // If the window size exceeds k, remove the element k steps back
            if(window.size() > k) {
                window.erase(nums[i - k]);
            }
        }
        return false; // No duplicates found within the distance k
    }
};
